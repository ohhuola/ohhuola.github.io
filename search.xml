<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[flask jinja2 UnicodeDecodeError 解决方法]]></title>
    <url>%2F2019%2F04%2F08%2Fbug-flask%2F</url>
    <content type="text"><![CDATA[在python2中,当有中文传递给jinja2模板会报如下错误: UnicodeDecodeError: ‘ascii’ codec can’t decode byte 0xe6 in position 0: ordinal not in range(128) 这个时侯单单在字符串前加u表示为unicode字符已经没有用了，而是需要加上一段代码来搞定： 12345import sys #导入sys模块reload(sys) #在之前import进来时,setdefaultencoding函数在被系统调用后删除了,所以必须重新加载此模块sys.setdefaultencoding(&apos;utf-8&apos;) #修改默认编码方式]]></content>
      <categories>
        <category>Bugs</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>flask</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CBC翻转字节攻击]]></title>
    <url>%2F2019%2F03%2F16%2Fsql4%2F</url>
    <content type="text"><![CDATA[知识点:AES的CBC模式加密加密过程: IV:用于随机化加密的字符串 ciphertext_0=Encrypt(Plaintext XOR IV)只用于第一组块 ciphertext_n=Encrypt(Plaintext XOR Ciphertext_N-1)用于除第一组之外的模块 1.png 解密过程: plaintext_0=Decrpt(Ciphertext) XOR IV 只用于第一组块 plaintext_n=Decrpt(Ciphertext) XOR Ciphertext_n-1 2.png CBC攻击攻击发生在解密过程中,实质上就是通过更改上一块的内容,来间接修改明文中的内容,你在密文中改变的字节,只会影响到在下一明文当中,具有相同偏移量的字节.因此,进行cbc攻击仅影响到两个块.主要用途:体现在不知道加密密钥的情况下,通过修改密文,可以间接修改明文 3.png 实际应用:Bugku-login4login4]]></content>
      <categories>
        <category>Web Security</category>
      </categories>
      <tags>
        <tag>Sql</tag>
      </tags>
  </entry>
</search>
